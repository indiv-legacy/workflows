name: Canary Release
on:
  pull_request:
  push:
    branches:
      - develop
      - dev

jobs:
  up:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: "{{github.name}}"
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: nodejs project information
        id: projectinfo
        uses: gregoranders/nodejs-project-info@v0.0.11
      
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: eu.gcr.io/indiv-app-dev/{{github.name}}
          tag-custom: v$\{{ steps.projectinfo.outputs.VERSION }}
          tag-sha: true
      
      - run: echo $\{{ steps.docker_meta.outputs.version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: $\{{ steps.yarn-cache-dir-path.outputs.dir }}
          key: $\{{ runner.os }}-yarn-$\{{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            $\{{ runner.os }}-yarn-

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: indiv-app-dev
          service_account_key: $\{{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
          export_default_credentials: true
      
      - run: gcloud auth configure-docker -q

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: $\{{ runner.os }}-buildx-$\{{ github.sha }}
          restore-keys: |
            $\{{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: $\{{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            NPM_TOKEN=$\{{ secrets.GH_NPM_TOKEN }}

      - name: Request version update
        if: github.event_name != 'pull_request'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: $\{{ secrets.GH_PRIVATE_TOKEN }}
          repository: indivorg/infra-core
          event-type: update_version
          client-payload: '{"service": "$\{{ env.SERVICE_NAME }}", "new_version": "$\{{ steps.docker_meta.outputs.version }}"}'
