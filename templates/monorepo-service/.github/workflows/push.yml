name: Upload website
on:
  workflow_dispatch:
  push:
    paths:
      - 'packages/web/**'
      - 'yarn.lock'
    branches:
      - main
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Start Deployment
        uses: bobheadxi/deployments@v0.6.0
        id: deployment
        with:
          step: start
          token: ${{ secrets.INDIVBOT_GITHUB_TOKEN }}
          env: production
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache NPM packages 👾
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Configure yarn
        run: yarn config set 'npmScopes["indivorg"].npmAuthToken' ${{ secrets.INDIVBOT_GITHUB_TOKEN }}

      - name: Install packages 📦
        run: yarn

      - name: Build and Test 🔧
        working-directory: packages/web
        run: |
          yarn build
          yarn test --passWithNoTests

      - name: Deploying 🚀
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: firebase
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: ${{ secrets.GOOGLE_PROJECT_SA_KEY }}
          channelId: live
          projectId: ${{ secrets.GOOGLE_PROJECT_ID }}
          target: backoffice
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Update Deployment Status
        uses: bobheadxi/deployments@v0.6.0
        if: always()
        with:
          step: finish
          token: ${{ secrets.INDIVBOT_GITHUB_TOKEN }}
          env_url: ${{ steps.firebase.outputs.details_url }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
